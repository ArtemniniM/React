Какие есть типы данных в JavaScript?
Чем примитивы отличатся от объектов/ссылочных типов?
Чем отличаются let, const и var?
Что такое “hoisting”?

Чем отличаются обычные функции и стрелочные (function vs =>)?
Какие есть функции для изменения контекста 
Что такое функция обратного вызова (callback) - та функция которую передаете в качестве аргумента

Что такое замыкание (closure) и зачем его придумали на коде?
Замыкание (closure) — это функция, которая «запоминает» переменные из своей внешней области видимости, даже после того как эта область завершила выполнение.
 Это позволяет создавать инкапсулированные данные.

Что такое рекурсия и в каких случаях ее применяют?
Что такое контекст this и как он определяется? - this - ссылка на ближ активный объект. 

Почему for in нельзя применять в массивам

Что такое прототипы.
 цепочка родительских объектов у текущего значения

Чем proto отличается от prototype
prototype — это свойство функции‑конструктора, в котором хранится объект с методами и свойствами, доступными всем экземплярам.
__proto__ — это ссылка внутри объекта на прототип, от которого он наследует свойства (обычно указывает на prototype конструктора).

Отличие in, hasOwnProperty

Что такое event loop и зачем он нужен? callstack, webapi, очереди
Event Loop — это механизм в JavaScript, который управляет выполнением кода, обработкой событий и асинхронных операций.
Он нужен для того, чтобы в однопоточном JS можно было
выполнять «параллельные» задачи: сетевые запросы, таймеры, обработку событий, не блокируя основной поток.
Call Stack - Это структура данных, куда помещаются все выполняемые функции.
Web APIs - Это окружение, предоставляемое браузером.Сюда попадают асинхронные задачи: setTimeout, fetch, обработчики событий DOM.
очереди - после каждой задачи из стека сначала выполняются все microtasks, потом берётся следующая задача из macrotask queue.

1.JS начинает выполнять код сверху вниз, помещая функции в Call Stack.
2.Асинхронные операции передаются в Web APIs.
3.Когда они завершаются, их колбэки попадают в очереди.
4.Event Loop проверяет: если стек пуст, берёт задачу из очереди и кладёт её в стек.
5.Сначала выполняются все microtasks, потом берётся следующая macrotask.


В чём разница между microtasks и macrotasks?

Что такое callback, Promise, async/await — кратко опиши разницу.
Callback — базовый способ, но неудобен при сложной логике.
Promise — более структурированный, подходит для цепочек.
async/await — самый читаемый и современный способ.

---------Что такое callback hell - колбеки ада
Чем синхронный код отличается от асинхронного

---------Что такое многопоточность и однопоточность
Однопоточность — программа выполняет все инструкции последовательно в одном потоке.
Многопоточность — программа может запускать несколько потоков выполнения, которые работают параллельно (или псевдопараллельно),
 что позволяет эффективнее использовать ресурсы процессора.

---------Что такое многопоточность и чем она отличается от асинхронности
Многопоточность — это выполнение программы в нескольких потоках одновременно (параллельно или псевдопараллельно).
Асинхронность — это способ организации кода, при котором задачи могут выполняться «в фоне» без блокировки основного потока,
 но не обязательно в нескольких потоках.

---------Что такое WebSocket и зачем он нужен?
WebSocket — это сетевой протокол, который позволяет установить постоянное двустороннее соединение между клиентом (например, браузером) и сервером. 
Он нужен для приложений,где требуется обмен данными в реальном времени: чаты, онлайн‑игры, уведомления, совместное редактирование документов

Зачем нужен TypeScript и в чём его преимущества перед JavaScript?

Что такое интерфейсы (interface) и типы (type)?
Интерфейс (interface) — это контракт, который описывает форму объекта или класса
Тип (type) — это более универсальный инструмент. Он может описывать не только объекты,
но и объединения (|), пересечения (&), кортежи, функции и даже примитивы.

Что такое generics и зачем они нужны?
Generics (обобщения) — это механизм в языках со строгой типизацией, позволяющий писать универсальный код,
который работает с разными типами данных, сохраняя при этом типобезопасность.
Они нужны, чтобы избежать дублирования кода, повысить гибкость и при этом не терять контроль типов.

Что такое семантическая разметка и зачем она нужна?
В чём разница между блочными и строчными элементами?
Что такое meta viewport и зачем он нужен?

В чём разница между позиционированием relative, absolute, fixed, sticky?
relative — элемент остаётся в потоке, но можно смещать его относительно своего обычного места.
absolute — элемент вырывается из потока и позиционируется относительно ближайшего предка с position ≠ static.
fixed — элемент фиксируется относительно окна браузера и не двигается при прокрутке.
sticky — гибрид: ведёт себя как relative, пока не достигнет заданного порога (например, top: 0), после чего «прилипает» как fixed.

Что делает display: flex отличается от displa: grid?

Что такое адаптивная верстка и медиазапросы?
Адаптивная вёрстка — это способ создания сайтов, которые автоматически подстраиваются под размер экрана устройства. 
Медиазапросы — это CSS-инструмент, позволяющий применять разные стили в зависимости от ширины, высоты, типа экрана и других параметров.

Что такое HTTP и как он работает?
Клиент (браузер) отправляет запрос на сервер:
Указывает метод (GET, POST, PUT, DELETE и др.)
Указывает путь к ресурсу (например, /index.html)
Добавляет заголовки (например, Accept, User-Agent)
Иногда — тело запроса (например, данные формы)
Сервер обрабатывает запрос и отправляет ответ:
Статус-код (200 OK, 404 Not Found, 500 Internal Server Error)
Заголовки (например, Content-Type, Cache-Control)
Тело ответа (HTML, JSON, изображение и т.д.)
Браузер получает ответ и отображает его пользователю.
Чем отличаются методы GET, POST, PUT, DELETE, PATCH?
Что такое статус-коды ответа сервера и какие они бывают?

Что такое headers у запроса и зачем они нужны?
HTTP‑заголовки (headers) — это служебные параметры запроса или ответа, которые передают метаданные: информацию о клиенте, сервере,
формате данных, кэшировании, авторизации и многом другом.
Они нужны, чтобы клиент и сервер могли правильно понять друг друга и корректно обработать данные.

---------Что такое CORS?
---------Что такое cookies, localStorage, sessionStorage?
---------Что такое REST API?
---------Что такое JWT и как используется для аутентификации?
---------Отличия аутентификации идентификации и регистрации?

Что такое ООП и зачем оно нужно?
ООП — это подход, при котором я описываю сущности как объекты с состоянием и поведением.

Назови 4 основных принципа ООП.

Чем абстрактный класс отличается от интерфейса
Абстрактный класс — это «скелет» с частичной реализацией и состоянием.
Интерфейс — это «чистый контракт», который задаёт только форму.

Что такое методы экземпляра и статические методы?
Методы экземпляра — это функции, которые принадлежат объекту (экземпляру класса) и работают с его состоянием (this).
Статические методы — это функции, которые принадлежат самому классу, а не его экземплярам. Их вызывают напрямую через класс,
 и они обычно служат для вспомогательных операций.

---------Что означает аббревиатура SOLID?
SOLID — это набор правил, которые делают код чистым, расширяемым и удобным для поддержки.
S - Single Responsibility Principle (Принцип единственной ответственности)
O — Open/Closed Principle (Принцип открытости/закрытости)
L — Liskov Substitution Principle (Принцип подстановки Барбары Лисков)
I — Interface Segregation Principle (Принцип разделения интерфейсов)
D — Dependency Inversion Principle (Принцип инверсии зависимостей)