{"ast":null,"code":"var _jsxFileName = \"/Users/cristina/Desktop/js-task/react-tasks/jsx/src/App.js\";\nimport \"./App.css\";\n\n//  1. На входе статичный массив чисел. Отобразить на странице только чётные числа, каждое в\n// теге <li>.\n\n// function App() {\n//   const arr = [1, 2, 3, 4, 5];\n//   const res1 = arr.filter((el) => el % 2 === 0);\n//   const res2 = res1.map((el) => <li>{el}</li>);\n//   return <div>{res2}</div>;\n// }\n\n// export default App;\n\n// 2. На входе статичный массив строк. Отфильтровать и отобразить только те строки, длина\n// которых больше 5 символов. Вывести в виде списка.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const arr = [\"priv\", \"hello\", \"nihawqeo\"];\n  const res1 = arr.filter(el => el.length > 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: res1.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nApp();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","arr","res1","filter","el","length","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cristina/Desktop/js-task/react-tasks/jsx/src/App.js"],"sourcesContent":["import \"./App.css\";\n\n//  1. На входе статичный массив чисел. Отобразить на странице только чётные числа, каждое в\n// теге <li>.\n\n// function App() {\n//   const arr = [1, 2, 3, 4, 5];\n//   const res1 = arr.filter((el) => el % 2 === 0);\n//   const res2 = res1.map((el) => <li>{el}</li>);\n//   return <div>{res2}</div>;\n// }\n\n// export default App;\n\n// 2. На входе статичный массив строк. Отфильтровать и отобразить только те строки, длина\n// которых больше 5 символов. Вывести в виде списка.\n\nfunction App() {\n  const arr = [\"priv\", \"hello\", \"nihawqeo\"];\n  const res1 = arr.filter((el) => el.length > 5);\n  return (\n    <div>\n      <ul>\n        {res1.map((el) => (\n          <li>{el}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nApp();\n"],"mappings":";AAAA,OAAO,WAAW;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;EACzC,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAM,GAAG,CAAC,CAAC;EAC9C,oBACEN,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,EACGJ,IAAI,CAACK,GAAG,CAAEH,EAAE,iBACXL,OAAA;QAAAO,QAAA,EAAKF;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACC,EAAA,GAZQZ,GAAG;AAaZA,GAAG,CAAC,CAAC;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}